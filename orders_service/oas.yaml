openapi: 3.0.3

info:
  title: Orders API
  description: API that allows you to manage orders for PizzaPisa
  version: 1.0.0

servers:
  - url: http://localhost:8000/v1
    description: URL for local development and testing

paths:
  /orders:
    get:
      parameters:
        - name: cancelled
          in: query
          required: false
          schema:
            type: boolean
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      summary: Returns a list of orders
      operationId: getOrders
      description: >
        A list of orders made by the customer
        sorted by date. Allows to filter orders
        by range of dates.
      responses:
        "200":
          description: A JSON array of orders
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  orders:
                    type: array
                    items:
                      $ref: "#/components/schemas/OrderGetSchema"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

    post:
      summary: Creates an order
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreateSchema"
              required:
                - product
                - size

      responses:
        "201":
          description: A JSON representation of the created order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderGetSchema"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /orders/{order_id}:
    parameters:
      - in: path
        name: order_id
        required: true
        schema:
          type: string
          format: uuid

    get:
      summary: Returns the details of a specified order
      operationId: getOrder
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderGetSchema"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

    put:
      summary: Replaces an existing specified order
      operationId: updateOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderUpdateSchema"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderGetSchema"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

    delete:
      summary: Deletes an existing specified order
      operationId: deleteOrder
      responses:
        "204":
          description: The resource was deleted successfully
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /orders/{order_id}/pay:
    parameters:
      - in: path
        name: order_id
        required: true
        schema:
          type: string
          format: uuid
    post:
      summary: Processes payment for a specified order
      operationId: payOrder
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderGetSchema"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /orders/{order_id}/cancel:
    parameters:
      - in: path
        name: order_id
        required: true
        schema:
          type: string
          format: uuid
    post:
      summary: Cancels a specified order
      operationId: cancelOrder
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderGetSchema"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

components:
  responses:
    NotFound:
      description: The specified resource was not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    UnprocessableEntity:
      description: The payload contains invalid values.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  securitySchemes:
    openId:
      type: openIdConnect
      openIdConnectUrl: https://coffeemesh-dev.eu.auth0.com/.well-known/openid-configuration
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://coffeemesh-dev.eu.auth0.com/oauth/token
          scopes: {}
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      additionalProperties: false
      type: object
      properties:
        detail:
          oneOf:
            - type: string
            - type: array
      required:
        - detail

    OrderItemGetSchema:
      additionalProperties: false
      type: object
      required:
        - product
        - size
      properties:
        id:
          type: string
          format: uuid
        product:
          type: string
          enum:
            - cheese
            - pepperoni
            - deluxe
            - hawaiian
            - canadian
            - veggie
            - coke
            - sprite
            - gingerale
            - icedtea
        size:
          type: string
          enum:
            - small
            - medium
            - large
            - xlarge
        quantity:
          type: integer
          format: int64
          default: 1
          minimum: 1
          maximum: 10

    OrderGetSchema:
      additionalProperties: false
      type: object
      required:
        - id
        - created
        - status
        - order
      properties:
        id:
          type: string
          format: uuid
        created:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - created
            - paid
            - progress
            - cancelled
            - dispatched
            - delivered
        order:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/OrderItemGetSchema"

    OrdersListSchema:
      additionalProperties: false
      type: object
      required:
        - orders
      properties:
        orders:
          type: array
          items:
            $ref: "#/components/schemas/OrderGetSchema"

    OrderCreateSchema:
      additionalProperties: false
      type: object
      required:
        - items
      properties:
        items:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/OrderItemGetSchema"

    OrderUpdateSchema:
      additionalProperties: false
      type: object
      required:
        - items
      properties:
        items:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/OrderItemGetSchema"

security:
  - oauth2:
      - getOrders
      - createOrder
      - getOrder
      - updateOrder
      - deleteOrder
      - payOrder
      - cancelOrder
  - bearerAuth:
      - getOrders
      - createOrder
      - getOrder
      - updateOrder
      - deleteOrder
      - payOrder
      - cancelOrder
